group 'animus.design'
version '1.0-SNAPSHOT'

buildscript {
    apply from: 'versions.gradle'

    repositories {
        maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.moowork.gradle:gradle-node-plugin:$node_plugin_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintray_plugin_version"
    }
}

subprojects {
    apply plugin: 'kotlin2js'
    apply plugin: 'com.moowork.node'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'maven'
    apply plugin: 'java'

    task processPkg(type: Copy) {
        from '.'
        into 'build/npm'
        include 'package.json'
        expand(
                kotlin_version: "$kotlin_version",
                kotlinext_version: "$kotlinext_version",
                mocha_version: "$mocha_version",
                react_version: "$react_version",
                react_dom_version: "$react_dom_version",
        )
    }

    task prepublish(type: Copy) {
        from '.'
        into 'build/npm'
        exclude 'package.json'
        exclude 'build/npm'
    }

    npm_publish {
        execOverrides {
            it.workingDir = 'build/npm'
        }
    }
    npm_publish.dependsOn prepublish
    npm_publish.dependsOn processPkg
    prepublish.dependsOn build

    repositories {
        maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
        jcenter()
        maven {
            url "http://dl.bintray.com/kotlin/kotlin-js-wrappers"
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
        compile "org.jetbrains.kotlinx:kotlinx-html-js:$kotlinx_html_version"
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    def projectName = name

    compileKotlin2Js {
        kotlinOptions {
            outputFile = "$projectDir/build/classes/main/${projectName}.js"
            moduleKind = "commonjs"
            sourceMap = true
            sourceMapEmbedSources = "always"
        }
    }

    def REPOURL = System.getenv("repo_url")
    def REPOUSER = System.getenv("repo_user")
    def REPOPASSWORD = System.getenv("repo_password")

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: REPOURL) {
                    authentication(
                            userName: REPOUSER,
                            password: REPOPASSWORD
                    )
                }
                snapshotRepository(url: REPOURL) {
                    authentication(
                            userName: REPOUSER,
                            password: REPOPASSWORD
                    )
                }
                pom.version = '1.0'
                pom.artifactId = "${projectName}"
                pom.groupId = 'animus.design'
            }
        }
    }

}

